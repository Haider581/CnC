@using CnC.Core
@using CnC.Core.TopUps
@using CnC.Service
@model List<TopUpRequestForm>
@using CnC.Web.Controllers
@{
    ViewBag.Title = "Top Up History";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var exchangeRate = new ExchangeRateController().GetExchangeRate(new SettingService().CustomerDefaultCurrency.Id);
    string tempDesc = "";
}
<style>
    .invalid {
        color: red !important;
    }
</style>
<!-- breadcrumb -->
<ol class="breadcrumb" style="text-transform: uppercase;">
    <li>@ViewBag.Title</li>
</ol>
<!-- MAIN CONTENT -->
<div id="content">
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <a href="CustomerNewTopUpRequest" role="button" class="btn">New Top Up Request</a>

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Search @ViewBag.Title</h2>
                    </header>
                    <!-- widget div-->
                    <div role="content">
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @using (Html.BeginForm("CustomerTopUpHistory", "TopUp", FormMethod.Post, new { @class = "smart-form", role = "form", name = "SearchTopUpHistory" }))
                            {
                                <fieldset>
                                    @{Html.RenderPartial("_TopUpRequestSearchControl");}
                                    <div class="row">
                                        @{Html.RenderPartial("_SearchButtons");}
                                    </div>
                                </fieldset>
                                            }
                        </div>
                        <!-- end widget content -->
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Request #</th>
                                        <th>Date</th>
                                        <th>Payment Method</th>
                                        <th>Card #</th>
                                        <th>Type</th>
                                        <th>Description</th>
                                        <th>Amount (€)</th>
                                        <th>Amount (IR)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        foreach (var item in Model)
                                        {
                                            int i = 0;
                                            foreach (var payment in item.Payments)
                                            {
                                                tempDesc = tempDesc + " " + payment.PaymentMethod + ",";
                                            }
                                            <text>
                                                @if (i == 0)
                                                {
                                                    i = 1;
                                                    <text>
                                                        <tr>
                                                            <td><a href="#">@item.Id</a></td>
                                                            <td>@item.CreatedOn.ToString("yyyy/MM/dd HH:mm")</td>
                                                            <td>
                                                                @{  string paymentDesc = string.Empty;
                                                                    foreach (var payment in item.Payments)
                                                                    {
                                                                        paymentDesc = paymentDesc + " " + payment.PaymentMethod + ",";
                                                                    }
                                                                }
                                                                @paymentDesc
                                                            </td>

                                                            <td>
                                                                @if (@item.TopUpRequests.Count > 0)
                                                                {
                                                                    @item.TopUpRequests[0].Card.Number
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (@item.TopUpRequests.Count > 0)
                                                                {@item.TopUpRequests[0].Card.CardRequest.CardType.Name}
                                                            </td>
                                                            <td>@item.Description</td>
                                                            <td>
                                                                @if (item.TopUpRequests.Count > 0)
                                                                {@String.Format("{0:#.##}", item.TopUpRequests[0].Amount)}
                                                            </td>
                                                            <td>
                                                                @if (item.TopUpRequests.Count > 0)
                                                                { @String.Format("###,###.##", item.TopUpRequests[0].Amount * exchangeRate.Rate) }
                                                            </td>
                                                        </tr>
                                                    </text>
                                                                        if (item.TopUpRequests.Count > 0)
                                                                        {
                                                                            item.TopUpRequests.RemoveAt(0);
                                                                        }
                                                                    }
                                                @foreach (var topUpRequest in item.TopUpRequests)
                                                {
                                                    <text>
                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td>@topUpRequest.Card.Number</td>
                                                            <td>@topUpRequest.Card.CardRequest.CardType.Name</td>
                                                            <td>@topUpRequest.Amount.ToString("###,###.##") </td>
                                                            <td>@(topUpRequest.Amount * exchangeRate.Rate).ToString("###,###.##")</td>
                                                            <td>@item.Status.ToString()</td>
                                                            <td>
                                                                @{
                                                                    string[] updateAction = new string[2];
                                                                    if (item.Status == RequestFormStatus.Pending)
                                                                    {
                                                                        updateAction[0] = "Upload Signed KYC Form";
                                                                        updateAction[1] = "UploadSignedKYCForm"; //we can also trim to make it method on controller
                                                                    }
                                                                    //else if (item.Status == RequestFormStatus.PaymentNotConfirmed)
                                                                    //{
                                                                    //    updateAction[0] = "Confirm Payment"; //Need to discuss
                                                                    //    updateAction[1] = "ConfirmPayment";
                                                                    //}
                                                                    else if (item.Status == RequestFormStatus.SentToCardIssuer)
                                                                    {
                                                                        updateAction[0] = "Sent To LAMDA"; //Need to discuss
                                                                        updateAction[1] = "SentToCardIssuer";
                                                                    }

                                                                }
                                                                <a href="@Url.Action(@updateAction[1], "Customer")">@updateAction[0]</a>

                                                            </td>
                                                        </tr>
                                                    </text>
                                                                    }
                                            </text>
                                                                        }
                                                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
            <!-- WIDGET END -->
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
</div>
<!-- END MAIN CONTENT -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section pagespecific {
    <script>
        // Wait for the DOM to be ready
        $(function () {
            // Initialized form validation on the SearchKYCForms form.
            // It has the name attribute "SearchKYCForms"
            $("form[name='SearchTopUpHistory']").validate({
                // Specify validation rules
                rules: {
                    // The key name on the left side is the name attribute
                    // of an input field. Validation rules are defined on the right side

                    txtCardNo: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        digits: true

                    },
                    txtNICNo: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        digits: true

                    },
                    txtCreatedDateFrom: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        date: true

                    },
                    txtCreatedDateTo: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        date: true

                    },
                    txtDeliveryDateFrom: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        date: true

                    },
                    txtDeliveryDateTo: {
                        // Specify that email should be validated
                        // by the built-in "email" rule
                        date: true

                    },
                    // Specify validation error messages
                    messages: {
                        Email: "Please enter a valid email address",
                        digits: "Please enter only digits.",
                        date: "Please enter a valid date.",
                    },
                    // Make sure the form is submitted to the destination defined
                    // in the "action" attribute of the form when valid
                    submitHandler: function (form) {
                        form.submit();
                    }
                }
            });
        });
    </script>

}