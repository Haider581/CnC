@using CnC.Core
@using System.Web.UI.WebControls
@using CnC.Service
@using CnC.Core.Customers
@using CnC.Core.Accounts
@model CnC.Core.Customers.Customer
@{
    var cust = Session["CurrentCustomer"] as Customer;
    var localizationService = new LocalizationService();
    var userSession = Session["CurrentSession"] as User;
    ViewBag.Title = "Customer Personal and Address Info";
    var commonController = new CnC.Web.Controllers.CommonController();
    var countries = commonController.GetCountries();
    // for get view
    CardService cardService = new CardService();
    var cardTypes = cardService.GetCardTypes();
    SettingService settingService = new SettingService();
    int customerMinimumAge = settingService.CustomerMinimumAge;
    var utility = new CnC.Web.Helper.Utility();
    string validateQuery = string.Empty;
    string isReadOnly = string.Empty;
    try
    {
        //TODO: may be misused we have to ensure query string validation
        validateQuery = Request.QueryString["validate"];
        if (validateQuery != null && validateQuery != "")
        {
            if (utility.UrlSafeDecrypt(validateQuery) == "yes")
            {
                isReadOnly = "readonly";
            }

        }
    }
    catch (Exception ex)
    {
        validateQuery = ex.Message;

    }


}
<style>
    .invalid {
        color: red !important;
    }
</style>
<link href="~/Content/css/CncSpinner.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="~/Scripts/Jalali/IntlDateDemo.js"></script>
<script src="~/Scripts/Jalali/IntlDate.js"></script>
<script src="~/Scripts/Jalali/PersianDate.js"></script>

<script src="~/Scripts/Jalali/jalali.js"></script>
<script src="~/Scripts/Jalali/calendar.js"></script>
<script src="~/Scripts/Jalali/calendar-setup.js"></script>
<script src="~/Scripts/Jalali/lang/calendar-fa.js"></script>
<div id="content">
    <!-- breadcrumb -->
    <ol class="breadcrumb" style="text-transform: uppercase;">
        @*<li>@User.Identity.Name.ToLower()</li>*@
        <li>@localizationService.GetResource(ViewBag.Title, null, ViewBag.Title)</li>
    </ol>
    <section id="widget-grid" class="">
        <!-- start Search Form -->
        <div class="jarviswidget jarviswidget-sortable" id="wid-id-8" data-widget-editbutton="false" data-widget-custombutton="false" role="widget">
            <header role="heading">
                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                <h2>
                    @if (string.IsNullOrEmpty(isReadOnly))
                    {
                        <span>@localizationService.GetResource("Cnc.EditCustomerDetail", null, "Edit Customer Detail")</span>
                    }
                    else
                    {
                        <span>@localizationService.GetResource("Cnc.Validate", null, "Validate")</span>
                    }

                </h2>
                @*<span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>*@
            </header>
            <!-- widget div-->
            <div role="content" style="overflow: auto;">
                <div id="dialog_simple" title="Dialog Simple Title" style="overflow: hidden;">
                    <div class="widget-body no-padding">
                        <form id="card-info-form2" name="CardInfoApprove" autocomplete="off" class="smart-form" style=" margin-top 18px; margin-bottom 18px; margin-left 18px; margin-right 18px;">
                            <fieldset>
                                <div class="row">
                                    <img class='zoom' src="" id="imgDoc" style="margin-left:30px;" width="600" height="500" />
                                </div>
                            </fieldset>

                        </form>
                    </div>
                </div>

                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->
                </div>
                <!-- end widget edit box -->
                <!-- widget content -->
                <div id="divEmp" class="widget-body no-padding">

                    <div id="cncLoaderMessage">
                        @*<span id="spanSuccess" class="spanSuccessColor"><span id="completeSpan" class="text-center text-success spanSuccessColor"><strong><i class='fa fa-check fa-lg'></i> Complete</strong></span><br />KYC form has been saved successfully!<br /><a id="lkGoBack" style="font-size: 14px;" class="spanSuccessColor" href="@Url.Action("NewKYCFormInCustomerLanguage","Customer")">Go back</a></span>*@
                    </div>
                    <div id="showMessage"> </div>
                    @using (Ajax.BeginForm("EditCustomer", "Customer",
new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "showMessage",
    OnFailure = "AjaxFailure",
    //OnSuccess = "onSuccess",
    OnBegin = "AjaxBegin",
    OnComplete = "AjaxComplete"
},
new
{
    @id = "NewCustomerForm",
    @name = "NewCustomerForm",
    @class = "smart-form validatform",
    role = "form",
    enctype = "multipart/form-data"
}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-danger" })

            <!-- Personal Details - start -->

                        <div id="personalInfoStep1">
                            <header>@localizationService.GetResource("Cnc.PersonalDetail&Address", null, "Personal Detail & Address") </header>
                            <fieldset>

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">First Name</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-text-width"></i>
                                            @{
                                                var engFirstName = Model != null ? Model.User.FirstName : null;
                                            }
                                            @Html.TextBox("txtEngFirstName", engFirstName, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "Please Enter in English" })
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="label" style="text-align:right">نام</label>
                                        <label class="input">
                                            <i class="icon-append fa fa-text-width"></i>
                                            @{
                                                var firstNameInCustomerLanguage = Model != null ? Model.User.FirstNameInCustomerLanguage : null;
                                            }
                                            @Html.TextBox("txtPerFirstName", firstNameInCustomerLanguage, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { Lang = "fa-IR", placeholder = "Please Enter in Persian", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">Last Name</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-text-width"></i>
                                            @{
                                                var lastName = Model != null ? Model.User.LastName : null;
                                            }
                                            @Html.TextBox("txtEngLastName", lastName, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "Please Enter in English", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="label" style="text-align:right">نام خانوادگی</label>
                                        <label class="input">
                                            <i class="icon-append fa fa-text-width"></i>
                                            @{
                                                var lastNameInCustomerLanguage = Model != null ? Model.User.LastNameInCustomerLanguage : null;
                                            }
                                            @Html.TextBox("txtPerLastName", lastNameInCustomerLanguage, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { Lang = "fa-IR", placeholder = "Please Enter in Persian", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6" title="English">
                                        <label class="label">Date Of Birth (yyyy/mm/dd) </label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-calendar"></i>
                                            @{
                                                var dateOfBirth = Model != null ? Model.DateOfBirth.ToString("yyyy/MM/dd") : null;
                                            }
                                            @if (string.IsNullOrEmpty(isReadOnly))
                                            {
                                                @Html.TextBox("txtEngDateOfBirth", dateOfBirth, new { @class = "datepicker", @placeholder = "Please Enter in English", @readonly = "true", })
                                            }
                                            else
                                            {
                                                @Html.TextBox("txtEngDateOfBirthTemp", dateOfBirth, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "" })
                                            }
                                            <em id="fortxtEngDateOfBirthError" style="display:none" class="invalid">You are Under Age </em>
                                        </label>
                                    </section>
                                    <section class="col col-6" title="Persian">
                                        <label class="label" style="text-align:right">تاریخ تولد</label>
                                        <label class="input">
                                            <i class="icon-append fa fa-calendar"></i>
                                            <input type="hidden" id="hfPerDateOfBirth" name="hfPerDateOfBirth" value="" />
                                            @*<input id="txtPerDateOfBirth" type="text" Lang="fa-IR" />*@
                                            @{
                                                var dateOfBirthInCustomerLanguage = Model != null ? Model.DateOfBirthInCustomerLanguage : null;
                                            }
                                            @Html.TextBox("txtPerDateOfBirth", dateOfBirthInCustomerLanguage, new { @style = "padding-right: 35px;", @placeholder = "Please Enter in Persian", @readonly = "true", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })

                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6" title="English">
                                        <label class="label">Address</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-map-marker"></i>
                                            @{
                                                var address = Model != null ? Model.Address : null;
                                            }
                                            @Html.TextBox("txtEngAddress", address, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "Please Enter in English" })
                                        </label>
                                    </section>
                                    <section class="col col-6" title="Persian">
                                        <label class="label" style="text-align:right">ادرس</label>
                                        <label class="input">
                                            <i class="icon-append fa fa-map-marker"></i>
                                            @{
                                                var addressInCustomerLanguage = Model != null ? Model.AddressInCustomerLanguage : null;
                                            }
                                            @Html.TextBox("txtPerAddress", addressInCustomerLanguage, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { Lang = "fa-IR", @placeholder = "Please Enter in Persain", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6" title="English">
                                        <label class="label">Address 2</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-map-marker"></i>
                                            @{
                                                var address2 = Model != null ? Model.Address2 : null;
                                            }
                                            @Html.TextBox("txtEngAddress2", address2, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "Please Enter in English" })
                                        </label>
                                    </section>
                                    <section class="col col-6" title="Persian">
                                        <label class="label" style="text-align:right">ادرس 2</label>
                                        <label class="input">
                                            <i class="icon-append fa fa-map-marker"></i>
                                            @{
                                                var address2InCustomerLanguage = Model != null ? Model.Address2InCustomerLanguage : null;
                                            }
                                            @Html.TextBox("txtPerAddress2", address2InCustomerLanguage, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { Lang = "fa-IR", @placeholder = "Please Enter in Persain", onkeypress = "validate(event)", @onCopy = "return false", @onDrag = "return false", @onDrop = "return false", @onPaste = "return false", @autocomplete = "off", })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">

                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="label">Gender</label>
                                            <label class="select">
                                                <i class="icon-append fa fa-comment"></i>
                                                @(Model != null ? Html.DropDownList("ddlGender", EnumHelper.GetSelectList(typeof(Gender), Model.Gender), " -Please Select- ") : Html.DropDownList("ddlGender", EnumHelper.GetSelectList(typeof(Gender)), " -Please Select- "))
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="label">Gender</label>
                                            <label class="input">

                                                @Html.TextBox("ddlGenderTemp", Model.Gender, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "" })
                                            </label>
                                        }


                                    </section>
                                    <section class="col col-6">

                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {<label class="label">Marital Status</label>
                                        <label class="select">
                                            <i class="icon-append fa fa-comment"></i>
                                            @(Model != null ? Html.DropDownList("ddlMaritalStatus", EnumHelper.GetSelectList(typeof(MaritalStatus), Model.MaritalStatus), " -Please Select- ") : Html.DropDownList("ddlMaritalStatus", EnumHelper.GetSelectList(typeof(MaritalStatus)), " -Please Select- "))

                                        </label>
                                        }
                                        else
                                        {
                                            <label class="label">Marital Status</label>
                                            <label class="input">
                                                @Html.TextBox("ddlMaritalStatusTemp", Model.MaritalStatus, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "" })
                                            </label>
                                        }

                                        @*@Html.DropDownList("ddlMaritalStatus", EnumHelper.GetSelectList(typeof(MaritalStatus)), " -Please Select- ")*@

                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">National ID #</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-hashtag">#</i>
                                            @{
                                                var nic = Model != null ? Model.NIC : null;
                                            }
                                            @Html.TextBox("txtNIC", nic, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "Please enter NIC#" })
                                            <input name="txtOriginalNic" style="display:none;" hidden="hidden" value="@nic" />
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="label">Passport No.</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-hashtag">#</i>
                                            @{
                                                var passportNo = Model != null ? Model.PassportNo : null;
                                            }
                                            @Html.TextBox("txtPassportNo", passportNo, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "Please enter Passport#" })
                                            <input name="txtOriginalPassport" style="display:none;" hidden="hidden" value="@passportNo" />
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">Nationality</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-flag-o"></i>
                                            @{
                                                var nationality = Model != null ? Model.Nationality : null;
                                            }
                                            @Html.TextBox("txtNationality", "Iranian", new { @readonly = true })
                                            @*@Html.TextBox("txtNationality", nationality, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="label">Postal Code</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-hashtag">#</i>
                                            @{
                                                var postalCode = Model != null ? Model.PostalCode : null;
                                            }
                                            @Html.TextBox("txtPostalCode", postalCode, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "" })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">

                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="label">Country</label>
                                            <label class="select">
                                                <i class="icon-append fa fa-comment"></i>
                                                @Html.DropDownList("ddlCountry", new SelectList(countries, "Id", "Name")@*, "- Please Select -"*@)
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="label">Country</label>
                                            <label class="input">
                                                @Html.TextBox("ddlCountryTemp", Model.Country.Name, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "" })
                                            </label>
                                        }


                                    </section>
                                    <section class="col col-6">

                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="label">City</label>
                                            <label class="select">
                                                <i class="icon-append fa fa-comment"></i>
                                                <select class="form-control" id="ddlCity" name="ddlCity">
                                                    @*<option>- Please Select Country -</option>*@
                                                </select>
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="label">City</label>
                                            <label class="input">
                                                @Html.TextBox("ddlCountryTemp", Model.City.Name, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { placeholder = "" })
                                            </label>
                                        }
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">Email</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-envelope-o"></i>
                                            @{
                                                var email = Model != null ? Model.User.Email : null;
                                            }
                                            @Html.TextBox("txtEmail", email, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "" })

                                        </label>
                                        <input name="txtOriginalEmail" style="display:none;" hidden="hidden" value="@email" />
                                    </section>
                                    <section class="col col-6">
                                        <label class="label">Contact No.</label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-phone"></i>
                                            @{
                                                var contactNo = Model != null ? Model.ContactNo : null;
                                            }
                                            @Html.TextBox("txtContactNo", contactNo, !string.IsNullOrEmpty(isReadOnly) ? (object)new { @readonly = true } : new { @placeholder = "" })
                                        </label>
                                    </section>
                                </div>

                                <header>
                                    @if (string.IsNullOrEmpty(isReadOnly))
                                    {
                                        <span>Upload Doc</span>
                                    }
                                    else
                                    {
                                        <span>Uploaded Documents</span>
                                    }
                                </header>

                                <div class="row">

                                    <section class="col col-6">

                                        <label class="label">
                                            National ID Scanned Copy (Persian)
                                            <a onclick='OpenDialog("@utility.ConvertImgToBase64(Model.NICDocInCustomerLanguage)","100");' style="float: right; cursor:pointer;font-weight:bold;" id="dialog_link">View NIC Image</a>
                                        </label>
                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="input">
                                                <i class="icon-append fa fa-file-image-o"></i>
                                                <input class="checkFileType" readonly="readonly" type="File" name="NICDocCustomer" id="NICDocCustomer" value="Browse" accept="image/jpeg, image/png" />
                                                <em id="forNICDocCustomerError" style="display:none" class="invalid">Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                            </label>
                                        }

                                    </section>

                                    <section class="col col-6">

                                        <label class="label">
                                            Passport Scanned Copy (Persian)
                                            <a onclick='OpenDialog("@utility.ConvertImgToBase64(Model.PassportDocInCustomerLanguage)","101");' style="float: right; cursor:pointer; font-weight:bold;" id="dialog_link2">View Passport Image</a>
                                        </label>
                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="input">
                                                <i class="icon-append fa fa-file-image-o"></i>
                                                <input class="checkFileType" type="File" readonly="readonly" name="PassportDocCustomer" id="PassportDocCustomer" value="Browse" accept="image/jpeg, image/png" />
                                                <em id="forPassportDocCustomerError" style="display:none" class="invalid">Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                            </label>
                                        }
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="label">
                                            Customer Signed Copy(Persian)
                                            <a onclick='OpenDialog("@utility.ConvertImgToBase64(Model.CustomerSignedFormInCustomerLanguage)","102");' style="float: right; cursor:pointer; font-weight:bold;" id="dialog_link3">View Customer Signed Doc(Persian)</a>
                                        </label>
                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="input">
                                                <i class="icon-append fa fa-file-image-o"></i>
                                                <input class="checkFileType" type="File" readonly="readonly" name="customerSignedCopyCl" id="customerSignedCopyCl" value="Browse" accept="image/jpeg, image/png" />
                                                <em id="forcustomerSignedCopyClError" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                            </label>
                                        }
                                    </section>

                                    <section class="col col-6">
                                        <label class="label">
                                            Customer Signed Copy(English)
                                            <a onclick='OpenDialog("@utility.ConvertImgToBase64(Model.CustomerSignedForm)","103");' style="float: right; cursor:pointer; font-weight:bold;" id="dialog_link4">View Customer Signed Doc(English)</a>

                                        </label>
                                        @if (string.IsNullOrEmpty(isReadOnly))
                                        {
                                            <label class="input">
                                                <i class="icon-append fa fa-file-image-o"></i>
                                                <input class="checkFileType" type="File" readonly="readonly" name="customerSignedCopyEng" id="customerSignedCopyEng" value="Browse" accept="image/jpeg, image/png" />
                                                <em id="forcustomerSignedCopyEngError" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                            </label>}
                                    </section>
                                </div>
                                <input type="hidden" id="hfCustomerId" name="hfCustomerId" value="" />
                                <input type="hidden" id="imgPath1" name="NicDocPath" value="@ViewBag.imgNicDocPath" />
                                <input type="hidden" id="imgPath2" name="PassportDocPath" value="@ViewBag.imgPassportDocPath" />
                                <input type="hidden" id="imgPath3" name="CustSignedDocCl" value="@ViewBag.custSignedDocCl" />
                                <input type="hidden" id="imgPath4" name="CustSignedDocEng" value="@ViewBag.custSignedDocEng" />
                            </fieldset>
                            <footer>
                                @if (string.IsNullOrEmpty(isReadOnly))
                                {
                                    <button type="submit" name="submitAction1" id="btnSaveInfoStep2" class="btn btn-primary">Update</button>
                                }
                                else
                                {
                                    <button type="button" name="submitAction2" onclick="ValidateCustomer();" id="btnSaveInfoStep1" class="btn btn-primary">Validate</button>
                                }

                            </footer>
                        </div>
                                                }
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <script src="~/Scripts/FarsiType.js"></script>
    <link href="~/Content/skins/aqua/theme.css" rel="stylesheet" />
    <script src="~/Scripts/wheelzoom.js"></script>
}
@section pagespecific {
    <script src="~/Scripts/Validation/Customer/ValidateCustomerInfo.js"></script>
    <script>
        $(document).ready(function () {
            localStorage.ulselectorid = "#left-panel > nav > ul > li:nth-child(1) > ul";
            document.getElementById(localStorage.ulselectorid).style.display = 'block';
        });
        $(".subul li").click(function () {
            localStorage.ulselectorid = $(this).closest('ul').attr('id');
        });
    </script>
}
<script>
    $(document).ready(function () {
        wheelzoom(document.querySelector('img.zoom'));
        var foo = getParameterByName('editId');
        $("#hfCustomerId").val(foo);

        function validate(evt) {
            var theEvent = evt || window.event;
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
            var regex = /[0-9]|\./;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }
        //$("#cncLoader").show();
        var start = new Date();
        start.setFullYear(start.getFullYear() - 100);
        var end = new Date();
        end.setFullYear(end.getFullYear() - @customerMinimumAge);
        $('.datepicker').datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy/mm/dd',
            minDate: start,
            maxDate: end,
            yearRange: start.getFullYear() + ':' + end.getFullYear(),
            onSelect: function (dateText, inst) {
                //var form = $('.validatform');
                //form.validate();
                //if (!form.valid()) {
                //    return false;
                //};
                var userdob = dateText;
                runCode(dateText);
                if (userdob) {
                    var age = calcAge(userdob);
                    if (age < (@customerMinimumAge)) {
                        document.getElementById("fortxtEngDateOfBirthError").style.display = "";
                        return false;
                    } else { document.getElementById("fortxtEngDateOfBirthError").style.display = "none"; }
                }
            },
        });

        $(".datepicker").on("change", function () {
            var userdob = $('#txtEngDateOfBirth').val();

            if (userdob) {
                var age = calcAge(userdob);
                if (age < 18) {
                    document.getElementById("fortxtEngDateOfBirthError").style.display = "";
                    return false;
                } else { document.getElementById("fortxtEngDateOfBirthError").style.display = "none"; }
            }

        });
        $("#btnSaveInfoStep1").click(function () {
            var userdob = $('#txtEngDateOfBirth').val();
            //alert(userdob);
            if (userdob) {
                var age = calcAge(userdob);
                if (age < 18) {
                    document.getElementById("fortxtEngDateOfBirthError").style.display = "";
                    return false;
                } else { document.getElementById("fortxtEngDateOfBirthError").style.display = "none"; }
            }

        });
        function calcAge(userdob) {
            var birthday = +new Date(userdob);
            //alert((Date.now() - birthday) / (31557600000));
            return ~~((Date.now() - birthday) / (31557600000));
        }
        function runCode(debug) {
            var tbd = debug.replace('/', ',').replace('/', ',');
            var str = "var dd = new Date("+"'" + tbd + "'"+");"
                     +"dd = dd.toPersianDate();";
            //var str = "var d=" + debug + "; alert(d);  d = d.toPersianDate();";
            try {
                //if (debug)
                //    str = str;
                str = eval(str).toString();
                document.getElementById("txtPerDateOfBirth").value = str.substring(0, 10).trim();
                //alert(str.substring(0, 10).trim());
            }catch (ex) {
                if (str.length > 0) {
                    str = ex.name + "(" + (ex.number & 0xFFFF) + "): " + ex.message;
                    alert(str);
                }
            }
            //output.value = str;

        }

        $('#ddlCountry option:eq(1)').prop('selected', true);
        //$('#ddlCountry').attr("disabled", true);
        var id = $("#ddlCountry").val();
        if (id != "") {
            var country = $("#ddlCountry").find("option:selected").text();
            CheckIsValid();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCities", "Common")',
                contentType: "application/json; charset=utf-8",
                data: { countryId: id },
                dataType: "json",
                success: function (data) {
                    var cmbCity = $('#ddlCity');
                    cmbCity.empty();
                    //cmbCity.append($('<option></option>').val("-1").html("- Please Select -"));
                    $.each(data,
                        function (i) {

                            cmbCity.append($('<option></option>').val(data[i].Id).html(data[i].Name));
                        });
                    if (country == "Iran" || country == "Pakistan") {
                        $('#ddlCity option:eq(1)').prop('selected', true)

                    }
                    else {
                        cmbCity.empty();
                        $('#ddlCity option:eq(0)').prop('selected', true)

                    }
                }
            });
        } else {
            var cmbCity = $('#ddlCity');
            cmbCity.empty();
            $('#ddlCity').attr("disabled", false);
            //cmbCity.append($('<option></option>').val("0").html("Select City"));
        }
        $('#dialog_simple').dialog({
            autoOpen: false,
            width: 700,
            resizable: false,
            modal: true,
            title: "Document",

        });

        $("#cncLoader").hide();
        $("#cncLoaderMessage").hide();

        $("#personalInfoStep1").show();
        $("#cardRequestAndDocsStep2").hide();
        $("#customerSignedCopyStep3").hide();


        window.addEventListener("submit", function (e) {
            CheckIsValid();
            var form = $('#NewCustomerForm');
            form.validate();
            if (!form.valid()) { return false; };
            $("#cncLoader").show();
            var form = e.target;
            if (form.getAttribute("enctype") === "multipart/form-data") {
                if (form.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(form.method, form.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {

                            var data = JSON.parse(xhr.responseText);
                            $("#cncLoader").hide();
                            if (data.length > 0) {

                                if (data[0] == "200") {
                                    $("#hfCustomerId").val(data[1]);
                                    if (data[2] == "Step2") {
                                        //Redirect to NewCustomerCardRequests
                                        document.getElementById("btnSaveInfoStep1").disabled = true;
                                        document.getElementById("btnSaveInfoStep2").disabled = true;
                                        var idVal = $("#hfCustomerId").val();
                                        var url = "/Customer/EditCustomerCardRequests?id=" + idVal;
                                        window.location.href = url;
                                    }else if (data[2]=="102") {
                                        document.getElementById("btnSaveInfoStep2").disabled = true;
                                        ResetForm();
                                        $("#cncLoaderMessage").append(data[1]);
                                        $("#cncLoaderMessage").show();
                                    }
                                } else {
                                    $("#showMessage").removeClass("alert alert-danger fade in");
                                    window.scroll(0,0);
                                    $("#showMessage").empty();
                                    $("#showMessage").show();
                                    $("#showMessage").addClass("alert alert-danger fade in");
                                    $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> '" + data[1] + "'");
                                }
                            }
                            //}
                            //}
                        }
                    };
                    xhr.send(new FormData(form));
                }
            }
        }, true);



    });//Ready document
    var t1=false;
    var t2=false;
    var t3=false;
    var t4=false;

    function OpenDialog(rf,callFrom) {
        if (callFrom=="100") {
            t1=true;
        }else if (callFrom=="101") {
            t2=true;
        }else if (callFrom=="102") {
            t3=true;
        }else if (callFrom=="103") {
            t4=true;
        }
        document.getElementById("imgDoc").src=rf;
        $('#dialog_simple').dialog('open');
        return false;
    }
    function ValidateCustomer(){
        if (t1==true && t2==true && t3==true && t4==true) {
            $("#cncLoader").show();
            var idVal = $("#hfCustomerId").val();
            if (idVal!=null && idVal!="") {
                CheckIsValid();
                $.ajax({
                    url: '@Url.Action("UpdateCustomerValidateStatus", "Customer")',
                    contentType: "application/json; charset=utf-8",
                    data: { key: idVal, failureReason: "" },
                    dataType: "json",
                    success: function (data) {
                        $("#cncLoader").hide();
                        if (data[0] == "200") {
                            $("#cncLoaderMessage").append(data[1]);
                            $("#cncLoaderMessage").show();
                        } else {
                            $("#showMessage").removeClass("alert alert-danger fade in");
                            window.scroll(0,0);
                            $("#showMessage").empty();
                            $("#showMessage").show();
                            $("#showMessage").addClass("alert alert-danger fade in");
                            $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> '" + data[1] + "'");
                        }
                    },
                    error: function () {
                        $("#cncLoader").hide();
                        window.scroll(0,0);
                        $("#showMessage").removeClass("alert alert-danger fade in");
                        $("#showMessage").empty();
                        $("#showMessage").show();
                        $("#showMessage").addClass("alert alert-danger fade in");
                        $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> Enable to process the request please try again.");
                    }
                });
            }else {
                $("#cncLoader").hide();
                window.scroll(0,0);
                $("#showMessage").removeClass("alert alert-danger fade in");
                $("#showMessage").empty();
                $("#showMessage").show();
                $("#showMessage").addClass("alert alert-danger fade in");
                $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> Enable to process the request please try again.");
            }
        }else {
            $("#cncLoader").hide();
            window.scroll(0,0);
            $("#showMessage").removeClass("alert alert-danger fade in");
            $("#showMessage").empty();
            $("#showMessage").show();
            $("#showMessage").addClass("alert alert-danger fade in");
            $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Warning!</strong> Please make sure all attached images are viewed properly.");
        }
    }
    function getParameterByName(name, url) {
        if (!url) {
            url = window.location.href;
        }
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
    function Validate(x, y) {
        str = (document.getElementById('TextBox1')).value;
        if (str.match(/([\<])([^\>]{1,})*([\>])/i) == null) {

            y.IsValid = true;
        }
        else {

            y.IsValid = false;
        }
    }

    function ValidateForm() {
        $('#NewCustomerForm').submit(function () {
            // get the array of all the inputs
            var $inputs = $('#NewCustomerForm :input');
            $inputs.each(function () {
                var str = $(this).val();
                if (str.match(/([\<])([^\>]{1,})*([\>])/i) != null) {
                    return false;
                }
            });
        });
    }
    function ResetForm() {

        document.getElementById("PassportDocCustomer").value = "";
        document.getElementById("NICDocCustomer").value = "";

        document.getElementById("txtEngLastName").value = "";
        document.getElementById("txtPerLastName").value = "";
        document.getElementById("txtEngDateOfBirth").value = "";
        document.getElementById("txtPerDateOfBirth").value = "";
        document.getElementById("txtEngAddress").value = "";
        document.getElementById("txtPerAddress").value = "";
        document.getElementById("txtEngAddress2").value = "";
        document.getElementById("txtPerAddress2").value = "";
        document.getElementById("txtNIC").value = "";
        document.getElementById("txtPassportNo").value = "";
        document.getElementById("txtNationality").value = "";
        document.getElementById("txtPostalCode").value = "";
        document.getElementById("txtEmail").value = "";
        document.getElementById("txtContactNo").value = "";
        //document.getElementById("cardId").value = "";

    }

    function UpdatePanelDiv() {
        $("#showMessage").empty();
        $("#showMessage").hide();
    }
    function AjaxBegin() {
        //alert("Begain");
        $("#cncLoader").show();

    }
    function AjaxComplete(data) {
        $("#cncLoader").hide();
        if (data.statusText == "OK") {
            if (data.responseJSON[0] == "100") {
                $("#cncLoaderMessage").append(data.responseJSON[1]);
                $("#cncLoaderMessage").show();

            } else {
                $("#showMessage").addClass("alert alert-danger fade in");
                $("#showMessage").append("<button class='close' data-dismiss='alert'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> '" + data.responseJSON[1] + "'");
            }
        }

        //data.status
        //200
        //data.statusText
        //"OK"
        //data.responseText
        //""this is json result""



    }
    function AjaxFailure(ajaxContext) {
        // alert("AjaxFailure");
        var response = ajaxContext.responseText;
        alert("Error Code [" + ajaxContext.ErrorCode + "] " + response);
    }


</script>
