@using CnC.Core
@using System.Web.UI.WebControls
@using CnC.Service
@using CnC.Core.Customers
@{
    ViewBag.Title = "New Customer Registration: Step 2 (Card Requests)";

    bool isCustomer = false;
    var userSession = Session["CurrentSession"] as CnC.Core.Accounts.User;
    if (userSession != null && userSession.IsCustomer)
    { isCustomer = true; }

    var cust = Session["CurrentCustomer"] as Customer;
    var localizationService = new LocalizationService(cust.LanguageId);

    var exchangeRate = new ExchangeRateService().GetExchangeRate(new SettingService().CustomerDefaultCurrency.Id);
    // for get view
    CardService cardService = new CardService();
    var cardTypes = cardService.GetCardTypes();
    var customerId = ViewBag.CustomerId;

}
<style>
    .invalid {
        color: red !important;
    }
</style>

<link href="~/Content/css/CncSpinner.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/Jalali/jalali.js"></script>
<script src="~/Scripts/Jalali/calendar.js"></script>
<script src="~/Scripts/Jalali/calendar-setup.js"></script>
<script src="~/Scripts/Jalali/lang/calendar-fa.js"></script>


<div id="content">
    <!-- breadcrumb -->
    <ol class="breadcrumb" style="text-transform: uppercase;">
        @*<li>@User.Identity.Name.ToLower()</li>*@
        <li>@localizationService.GetResource(ViewBag.Title, null, ViewBag.Title)</li>
    </ol>
    <section id="widget-grid" class="">

        <!-- start Search Form -->
        <div class="jarviswidget jarviswidget-sortable" id="wid-id-8" data-widget-editbutton="false" data-widget-custombutton="false" role="widget">
            <header role="heading">

                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                <h2>@localizationService.GetResource("Cnc.CustomerCardRequest", null, "Customer Card Request")</h2>
                @*<span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>*@
            </header>
            <!-- widget div-->
            <div role="content">
                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->
                </div>
                <!-- end widget edit box -->
                <!-- widget content -->
                <div id="divEmp" class="widget-body no-padding">
                    @*<div id="cncLoader"></div>*@
                    <div id="cncLoaderMessage">
                        @*<span id="spanSuccess" class="spanSuccessColor"><span id="completeSpan" class="text-center text-success spanSuccessColor"><strong><i class='fa fa-check fa-lg'></i> Complete</strong></span><br />KYC form has been saved successfully!<br /><a id="lkGoBack" style="font-size: 14px;" class="spanSuccessColor" href="@Url.Action("NewKYCFormInCustomerLanguage","Customer")">Go back</a></span>*@
                    </div>
                    <div id="showMessage"> </div>
                    @using (Ajax.BeginForm("NewCustomerCardRequests", "Customer",
new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "showMessage",
    OnFailure = "AjaxFailure",
    //OnSuccess = "onSuccess",
    OnBegin = "AjaxBegin",
    OnComplete = "AjaxComplete"

}, new { @id = "NewCustomerCardRequest", @name = "NewCustomerForm", @class = "smart-form validatform", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-danger" })

                    <!-- Step2 -->
                        <div id="cardRequestAndDocsStep2">
                            <!-- Cards - start -->
                            <header>@localizationService.GetResource("Cards", null, "Cards")</header>
                            <fieldset>
                                <div class="progress progress-sm progress-striped active">
                                    <div class="progress-bar bg-color-darken" role="progressbar" style="width: 45%"></div>
                                </div>
                                <div>
                                    <label class="label label-info" id="lblTopupExchangeRate">
                                        @*<span>Exchange Rate 1</span>@Html.Raw(systemCurrency.Code)= <label>@exchangeRate.Rate @exchangeRate.Currency.Code</label>*@
                                    </label>
                                    <p class="text-danger">
                                        Step 1: For each Card type enter quantity which Customer requested
                                    </p>
                                    <p class="text-danger">
                                        Step 2: It is assumed that Customer provided information has already been validated and Cards fee paid
                                    </p>
                                    <p class="text-danger">
                                        Note: Card policy will apply
                                    </p>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th>@localizationService.GetResource("Cnc.Name", null, "Name")</th>
                                                <th>@localizationService.GetResource("Cnc.Quantity", null, "Quantity")</th>
                                                <th hidden>@localizationService.GetResource("Cnc.Fee", null, "Fee")</th>
                                                <th hidden>@localizationService.GetResource("Cnc.TotalFee", null, "Total Fee") (&#163;)</th>
                                                @*<th>Total Fee (IR)</th>*@
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{

                                                if (cardTypes != null)
                                                {
                                                    string IsProofOfSourceOfFundsRequired = string.Empty;
                                                    string IsProofOfAddressRequired = string.Empty;
                                                    foreach (var item in cardTypes)
                                                    {
                                                        var listItems = new List<ListItem>();
                                                        for (int i = 0; i <= item.MaxQuantity; i++)
                                                        {
                                                            listItems.Add(new ListItem() { Text = "" + i, Value = "" + i });
                                                        }

                                                        // Make a string that stores Id of cards where [IsProofOfSourceOfFundsRequired] ,[IsProofOfAddressRequired] is true
                                                        // make two hidden fields
                                                        if (item.IsProofOfSourceOfFundsRequired)
                                                        {
                                                            IsProofOfSourceOfFundsRequired = IsProofOfSourceOfFundsRequired + item.Id + ",";
                                                        }
                                                        if (item.IsProofOfAddressRequired)
                                                        {
                                                            IsProofOfAddressRequired = IsProofOfAddressRequired + item.Id + ",";
                                                        }
                                                        <text>
                                                            <tr>
                                                                <td>
                                                                    @item.Name<input type="hidden" id="CardName" name="CardName" value="@item.Name" />
                                                                    <input type="hidden" id="cardId" name="cardId" value="@item.Id" />
                                                                </td>
                                                                <td>
                                                                    <label class="select">
                                                                        <i class="icon-append fa fa-tag"></i>
                                                                        @if (item.IsProofOfAddressRequired && item.IsProofOfSourceOfFundsRequired)
                                                                        {
                                                                            @Html.DropDownList("CardQty", new SelectList(listItems, "Value", "Text"), new { @class = "ddlDocumentsRequired ddlCheckCardQty" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.DropDownList("CardQty", new SelectList(listItems, "Value", "Text"), new { @class = "ddlCheckCardQty" })
                                                                        }
                                                                    </label>
                                                                </td>
                                                                <td hidden>@item.Fee</td>
                                                                <td class="feeEU" hidden>0.00</td>
                                                            </tr>
                                                        </text>
                                                    }

                                                    //Here make two hidden fields
                                                    <text>
                                                        <input type="hidden" id="IsProofOfSourceOfFundsRequired" name="IsProofOfSourceOfFundsRequired" value="@IsProofOfSourceOfFundsRequired" />
                                                        <input type="hidden" id="IsProofOfAddressRequired" name="IsProofOfSourceOfFundsRequired" value="@IsProofOfAddressRequired" />
                                                    </text>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                    <div id="divMsg" class="alert alert-danger" style="display:none;">
                                        <strong>@localizationService.GetResource("Cnc.RequiredField", null, "The Field is Required")!</strong> @localizationService.GetResource("Cnc.PleaseSelectOneCard", null, "Please Select One Card").
                                    </div>
                                </div>
                                @if (isCustomer)
                                {
                                    <div style="text-align:right; margin-right:10px;">@localizationService.GetResource("Cnc.TotalFee", null, "Total Fee") (€): <label id="TotalFeeEU">0.00</label></div>
                                    <div style="text-align:right; margin-right:10px;">@localizationService.GetResource("Cnc.TotalFee", null, "Total Fee") (Rial): <label id="TotalFeeIR">0.00</label></div>
                                    <input type="hidden" id="hidTotalFeeEU" name="hidTotalFeeEU" />
                                    <input type="hidden" id="hidTotalFeeEU" name="hidTotalFeeEU" />
                                }
                                <br />
                                @*Total Fee (IR): <label id="TotalFeeInCustomerCurrency"></label>
                                    <input type="hidden" id="hidTotalFeeInCustomerCurrency" name="hidTotalFeeInCustomerCurrency" />
                                    <br />*@
                                @*Service Charges: <label id="ServiceChargesInCustomerCurrency">100</label>
                                    <input type="hidden" id="hidServiceChargesInCustomerCurrency" value="100" name="hidServiceChargesInCustomerCurrency" />*@
                                <br />
                                @*Total Fee To Pay: <label id="GrandTotal">0</label>*@
                                <input type="hidden" id="hidGrandTotal" name="hidGrandTotal" />
                            </fieldset>
                            <!-- Cards - end-->
                            <!-- Customer Language Documents - start -->
                            @if (cardTypes != null && cardTypes.Count > 0)
                            {
                                if (cardTypes.Any(c => c.IsProofOfSourceOfFundsRequired == true && c.IsProofOfAddressRequired == true))
                                {
                                    <div id="CustomerLanguageDocuments">
                                        <header>@localizationService.GetResource("Cnc.AttachCustomerDocsjpegFormat", null, "Attach Customer Documents, Persian, only in png/jpg/jpeg format, file size maximum 1MB")</header>
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="label">@localizationService.GetResource("Cnc.ProofofAddressType", null, "Proof Of Address Type"):</label>
                                                    <label class="select">
                                                        <i class="icon-append fa fa-comment"></i>
                                                        <select class="form-control" id="proofOfAddressType" name="proofOfAddressType">
                                                            <option value="default">- @localizationService.GetResource("Cnc.PleaseSelectType", null, "Please Select Type") -</option>
                                                            <option value="1">@localizationService.GetResource("Cnc.PropertyOwnerShip", null, "Property Ownership or Lease Legal Document")</option>
                                                            <option value="2">@localizationService.GetResource("Cnc.LatestElectBill", null, "Latest Electricity Bill")</option>
                                                            <option value="3">@localizationService.GetResource("Cnc.LatestGasBill", null, "Latest Gas Bill")</option>
                                                        </select>
                                                    </label>
                                                    <label class="label">@localizationService.GetResource("Cnc.ProofOfAddressScanedCopy", null, "Proof Of Address, Scanned Copy (Persian)")</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[0]" id="proofOfAddressDocCl0" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfAddressDocCl0Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[1]" id="proofOfAddressDocCl1" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfAddressDocCl1Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[2]" id="proofOfAddressDocCl2" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfAddressDocCl2Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[3]" id="proofOfAddressDocCl3" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfAddressDocCl3Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                </section>
                                                @*<section class="col col-6">
                                                    <label class="label">Proof Of Address, Scanned Copy (Persian)</label>
                                                    <label class="input">
                                                    <i class="icon-append fa fa-file-image-o"></i>
                                                    <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[0]" id="proofOfAddressDocCl0" value="Browse" accept="image/jpeg, image/png" />
                                                    <em id="forproofOfAddressDocCl0Error" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                                    </label>
                                                    <label class="input">
                                                    <i class="icon-append fa fa-file-image-o"></i>
                                                    <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[1]" id="proofOfAddressDocCl1" value="Browse" accept="image/jpeg, image/png" />
                                                    <em id="forproofOfAddressDocCl1Error" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                                    </label>
                                                    <label class="input">
                                                    <i class="icon-append fa fa-file-image-o"></i>
                                                    <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[2]" id="proofOfAddressDocCl2" value="Browse" accept="image/jpeg, image/png" />
                                                    <em id="forproofOfAddressDocCl2Error" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                                    </label>
                                                    <label class="input">
                                                    <i class="icon-append fa fa-file-image-o"></i>
                                                    <input class="checkFileType" readonly="readonly" type="File" name="proofOfAddressDocCl[3]" id="proofOfAddressDocCl3" value="Browse" accept="image/jpeg, image/png" />
                                                    <em id="forproofOfAddressDocCl3Error" style="display:none" class="invalid"> Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!</em>
                                                    </label>
                                                    </section>*@
                                                <section class="col col-6">
                                                    <label class="label">@localizationService.GetResource("Cnc.ProofofSourceOfFunds", null, "Proof Of Source Of Funds")</label>
                                                    <label class="select">
                                                        <i class="icon-append fa fa-comment"></i>
                                                        <select class="form-control" id="sourcceOfFundType" name="sourcceOfFundType">
                                                            <option value="default">- @localizationService.GetResource("Cnc.PleaseSelectType", null, "Please Select Type") -</option>
                                                            <option value="1">@localizationService.GetResource("Cnc.Empoyement", null, "Employement")</option>
                                                            <option value="2">@localizationService.GetResource("Cnc.Pension", null, "Pension")</option>
                                                            <option value="3">@localizationService.GetResource("Cnc.PaymentofDividendsasUBO", null, "Payment of Dividends as UBO")*</option>
                                                            <option value="4">@localizationService.GetResource("Cnc.LoanAgreement", null, "Loan Agreement")</option>
                                                            <option value="5">@localizationService.GetResource("Cnc.SaleContract", null, "Sale Contract")</option>
                                                            <option value="6">@localizationService.GetResource("Cnc.CommisionBasedAssociateAgreement", null, "Commission based Associate Agreement")</option>
                                                            <option value="7">@localizationService.GetResource("Cnc.InsuranceCompensation", null, "Insurance Compensation")</option>
                                                            <option value="8">@localizationService.GetResource("Cnc.Lottery/Winning", null, "Lottery/Winning")</option>
                                                            <option value="9">@localizationService.GetResource("Cnc.OtherSourceOfFunds", null, "Other Source Of Funds")</option>

                                                        </select>
                                                    </label>

                                                    <div id="OtherSourceofFunds" style="display:none; padding-top:15px;">
                                                        <label class="label">@localizationService.GetResource("Cnc.Mention")</label>
                                                        <label class="input">
                                                            <i class="icon-prepend fa fa-comment"></i>
                                                            @Html.TextBox("txtOtherSourceofFunds", null, new { @name = "txtOtherSourceofFunds", @placeholder = @localizationService.GetResource("Cnc.OtherSourceOfFunds") })
                                                        </label>
                                                    </div>
                                                    <label class="label">@localizationService.GetResource("Cnc.SourceOfFunds", null, "Source of Funds")</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfSourceOfFundsCl[0]" id="proofOfSourceOfFundsCl0" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfSourceOfFundsCl0Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfSourceOfFundsCl[1]" id="proofOfSourceOfFundsCl1" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfSourceOfFundsCl1Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfSourceOfFundsCl[2]" id="proofOfSourceOfFundsCl2" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfSourceOfFundsCl2Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-file-image-o"></i>
                                                        <input class="checkFileType" readonly="readonly" type="File" name="proofOfSourceOfFundsCl[3]" id="proofOfSourceOfFundsCl3" value="Browse" accept="image/jpeg, image/png" />
                                                        <em id="forproofOfSourceOfFundsCl3Error" style="display:none" class="invalid"> @localizationService.GetResource("Cnc.AttachedDocsImageFormat", null, "Only image type jpg/png/jpeg/ is allowed and File size must under 1MB!")</em>
                                                    </label>
                                                </section>
                                            </div>


                                        </fieldset>

                                    </div>
                        <!-- Documents Customer- end -->
                                }
                            }

                            <footer>
                                <button type="submit" name="btnSaveInfoStep2" id="btnSaveInfoStep2" class="btn btn-primary">@localizationService.GetResource("Cnc.Save", null, "Save")</button>
                            </footer>

                        </div>
                    <!-- End Step2 -->
                                                <input type="hidden" id="hfIsCustomer" value="@isCustomer" />
                                                <input type="hidden" id="hfCustomerId" name="hfCustomerId" value="@customerId" />

                                                }
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Scripts/FarsiType.js"></script>
    <link href="~/Content/skins/aqua/theme.css" rel="stylesheet" />
}
@section pagespecific {
    <script src="~/Scripts/Validation/Customer/NewKYCFormInCustomerLanguage.js"></script>
}
<script>
    //function checkcard(ddl) {
    //    alert(ddl.value);
    //    if (ddl.value > 0) {
    //        $("#CustomerLanguageDocuments").show();
    //    }
    //    else {
    //        $("#CustomerLanguageDocuments").hide();
    //    }
    //}
    $(document).ready(function () {
        var isCust = $("#hfIsCustomer").val();
        //if (isCust != null && isCust != "") {
        //    $("#logout").remove();
        //    $("#left-panel").remove();
        //    $('body').addClass("minified");

        //}
        // Save button
        // check if user has selected any card
        $("#btnSaveInfoStep2").click(function () {
            var a;
            $('.ddlCheckCardQty').each(function () {
                if ($(this).val() > 0) {
                    a = true;
                }
            });
            if (!a) {
                $("#divMsg").show();
                return false;
            }
            else {
                $("#divMsg").hide();
            }
        });

        var a;
        $('.ddlDocumentsRequired').each(function () {
            if ($(this).val() > 0) {
                a = true;
            }
        });
        if (a) {
            $("#CustomerLanguageDocuments").show();
            $("#divMsg").hide();
        }
        else {
            $("#CustomerLanguageDocuments").hide();
        }

        // Card drop down change
        $(".ddlDocumentsRequired").change(function () {
            var a;
            $('.ddlDocumentsRequired').each(function () {
                if ($(this).val() > 0) {
                    a = true;
                }
            });
            if (a) {
                $("#CustomerLanguageDocuments").show();
                $("#divMsg").hide();
            }
            else {
                $("#CustomerLanguageDocuments").hide();
            }
        });
        $(".checkFileType").change(function () {
            //var form = $('.validatform');
            //form.validate();
            //if (!form.valid()) { return false; };
        });
        //var CardQty = $("#CardQty").find("option:selected").val();

        //if (CardQty == 0) {
        //    alert(CardQty);
        //    document.getElementById("CustomerLanguageDocuments").style.display = "none";
        //} else { alert("else"); document.getElementById("CustomerLanguageDocuments").style.display = ""; }

        //$(document).on('change', 'select[id^="CardQty"]', function () {
        //    $('select[id^="CardQty"]').each(function () {
        //       alert($(this).val());
        //    });
        //});

        //$(".ddl").change(function () {

        //    var CardQty = $(".ddl").find("option:selected").val();
        //    alert(CardQty);
        //    if (CardQty == 0) {
        //        document.getElementById("CustomerLanguageDocuments").style.display = "none";
        //    } else { document.getElementById("CustomerLanguageDocuments").style.display = ""; }
        //});



        $("#cncLoader").hide();
        $("#cncLoaderMessage").hide();

        window.addEventListener("submit", function (e) {
            CheckIsValid();
            var form = $('#NewCustomerCardRequest');
            form.validate();
            if (!form.valid()) { return false; };
            $("#cncLoader").show();
            var form = e.target;
            if (form.getAttribute("enctype") === "multipart/form-data") {
                if (form.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(form.method, form.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {

                            var data = JSON.parse(xhr.responseText);
                            $("#cncLoader").hide();
                            if (data.length > 0) {

                                if (data[0] == "200") {
                                    if (data[2] == "Step3") {
                                        document.getElementById("btnSaveInfoStep2").disabled = true;
                                        //Redirect to NewCustomerSignedForm
                                        var idVal = $("#hfCustomerId").val();
                                        var url = "/Customer/NewCustomerSignedForm?id=" + idVal;
                                        window.location.href = url;
                                    } else if (data[2] == "Step4") {
                                        $("#cncLoaderMessage").append(data[1]);
                                        $("#cncLoaderMessage").show();
                                    }
                                } else {
                                    $("#showMessage").removeClass("alert alert-danger fade in");
                                    $("#showMessage").empty();
                                    $("#showMessage").show();
                                    $("#showMessage").addClass("alert alert-danger fade in");
                                    $("#showMessage").append("<button class='close' onclick='UpdatePanelDiv();'>×</button> <i class='fa-fw fa fa-times'></i><strong>Error!</strong> '" + data[1] + "'");
                                }
                            }
                            //}
                            //}
                        }
                    };
                    xhr.send(new FormData(form));
                }
            }
        }, true);



    });//Ready document


    function ResetForm() {

        document.getElementById("proofOfSourceOfFundsCl0").value = "";
        document.getElementById("proofOfSourceOfFundsCl1").value = "";
        document.getElementById("proofOfSourceOfFundsCl2").value = "";
        document.getElementById("proofOfSourceOfFundsCl3").value = "";
        document.getElementById("proofOfSourceOfFundsCl4").value = "";

        document.getElementById("ProofOfAddressDocCutomer").value = "";

    }

    function UpdatePanelDiv() {
        $("#showMessage").empty();
        $("#showMessage").hide();
    }
    function AjaxBegin() {
        //alert("Begain");
        $("#cncLoader").show();


    }
    function AjaxComplete(data) { }
    function AjaxFailure(ajaxContext) {
        // alert("AjaxFailure");
        var response = ajaxContext.responseText;
        alert("Error Code [" + ajaxContext.ErrorCode + "] " + response);
    }


</script>

<script type="text/javascript">
    $(function () {
        $('tbody tr').hover(function () {
            $(this).toggleClass('clickable');
        }).on('click', function (evt) {

            var $cell = $(evt.target).closest('td');
            if ($cell.index() == 1) {
                try {
                    var hasValSure = "t";
                    var maxQtyVal = $(this).find('select').val();
                    var maxQtyText = $(this).find('select option:selected').text();

                    var originalInUreo = $(this).find('td:eq(2)').html();
                    var totalInUreo = originalInUreo * maxQtyVal;
                    //var totalInIR = (originalInUreo * maxQtyVal); * @exchangeRate.Rate;
                    $(this).find('td:eq(3)').text("" + totalInUreo);
                    //  $(this).find('td:eq(4)').text("" + totalInIR.toFixed(2));

                } catch (err) {
                }
            }

            // Calculate column totals
            calculateTotalInEU();
            // calculateTotalInIR();
            calculateGrandTotalIR();

        });
    });

    //** Calculate column total in Euro ** //
    function calculateTotalInEU() {
        try {
            var sum = 0;
            $(".feeEU").each(function () {
                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length != 0) {
                    sum += parseFloat(value);
                    $("#hidTotalFeeEU").val(sum);
                    $("#TotalFeeEU").text(sum.toFixed(2));
                    $("#TotalFeeIR").text((sum * parseFloat(@exchangeRate.Rate)).toFixed(2));
                }
            });
        }
        catch (e) { }
    }



    //**  Calculate Grand total in customer's currency ** //
    function calculateGrandTotalIR() {
        try {
            //parseFloat($("#hidTotalFeeInCustomerCurrency").val()) +
            var gt = (parseFloat($("#hidTotalFeeEU").val())); //+ parseFloat($("#hidServiceChargesInCustomerCurrency").val())

            $("#GrandTotal").text(gt.toFixed(2));
            $("#hidGrandTotal").val(gt);
        }
        catch (e) { }
    }
    $("#sourcceOfFundType").change(function () {
        var sourcceOfFundType = $("#sourcceOfFundType").find("option:selected").val();

        if (sourcceOfFundType == 9) {
            document.getElementById("OtherSourceofFunds").style.display = "";
        } else { document.getElementById("OtherSourceofFunds").style.display = "none"; }
    });


</script>
<script type="text/javascript">
    $(function () {
        $('tbody tr').hover(function () {
            $(this).toggleClass('clickable');
        }).on('click', function (evt) {
            var $cell = $(evt.target).closest('td');
            if ($cell.index() == 1) {
                try {
                    var hasValSure = "t";
                    var maxQtyVal = $(this).find('select').val();
                    var maxQtyText = $(this).find('select option:selected').text();
                    var originalInUreo = $(this).find('td:eq(2)').html();
                    var totalInUreo = originalInUreo * maxQtyVal;
                    //var totalInIR = (originalInUreo  maxQtyVal);  @exchangeRate.Rate;
                    $(this).find('td:eq(3)').text("" + totalInUreo);
                    //  $(this).find('td:eq(4)').text("" + totalInIR.toFixed(2));

                } catch (err) {
                }
            }
            // Calculate column totals
            calculateTotalInEU();
            // calculateTotalInIR();
            calculateGrandTotalIR();
        });
    });
    //* Calculate column total in Euro * //
    function calculateTotalInEU() {
        try {
            var sum = 0;
            $(".feeEU").each(function () {
                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length != 0) {
                    sum += parseFloat(value);
                    $("#hidTotalFeeEU").val(sum);
                    $("#TotalFeeEU").text(sum.toFixed(2));
                    $("#TotalFeeIR").text((sum * parseFloat(@exchangeRate.Rate)).toFixed(2));
                }
            });
        }
        catch (e) { }
    }
    //*  Calculate Grand total in customer's currency * //
    function calculateGrandTotalIR() {
        try {
            //parseFloat($("#hidTotalFeeInCustomerCurrency").val()) +
            var gt = (parseFloat($("#hidTotalFeeEU").val())); //+ parseFloat($("#hidServiceChargesInCustomerCurrency").val())
            $("#GrandTotal").text(gt.toFixed(2));
            $("#hidGrandTotal").val(gt);
        }
        catch (e) { }
    }
    $("#sourcceOfFundType").change(function () {
        var sourcceOfFundType = $("#sourcceOfFundType").find("option:selected").val();
        if (sourcceOfFundType == 9) {
            document.getElementById("OtherSourceofFunds").style.display = "";
        } else { document.getElementById("OtherSourceofFunds").style.display = "none"; }
    });
</script>
